
.menu-item {
    min-width: 30%;
    height: 240px;
    // flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。
    // flex-grow项目的放大比例，默认为0，即如果存在剩余空间，也不放大。如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）
    // flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。
    // 如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。
    // flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。
    flex: 1 1 auto;
    display: flex;
    // 定义项目在交叉轴上如何对齐。
    align-items: center;
    // 项目在主轴上的对齐方式。
    justify-content: center;
    border: 1px solid black;
    margin: 0 7.5px 15px;
    overflow:hidden;
    &.large {
      height:380px;
    }
   &:hover {
     cursor:pointer;

     .background-image {
       transform: scale(1.1);
       transition: transform 6s cubic-bezier(0.25,0.45,0.45,0.95);
     }
     .content {
       opacity:0.9;
     }
   }
 
    &:first-child {
      margin-right: 7.5px;
    }
  
    &:last-child {
      margin-left: 7.5px;
    }
  .background-image {
    width: 100%;
    height:100%;
    background-position:center;
    background-size:cover;
  }
    .content {
      height: 90px;
      padding: 0 25px;
      display: flex;
      // flex-direction属性决定主轴的方向（即项目的排列方向）column：主轴为垂直方向，起点在上沿。
      flex-direction: column;
      align-items: center;
      justify-content: center;
      border: 1px solid black;
      background-color: white;
      opacity:0.7;
      // 父盒子是flex, 子盒子绝对定位会自动居中
      position:absolute;
  
      .title {
        font-weight: bold;
        margin-bottom: 6px;
        font-size: 22px;
        color: #4a4a4a;
  

      }
  
      .subtitle {
        font-weight: lighter;
        font-size: 16px;
      }
    }
  }
  